version: '3.8'

services:
  orchestrator:
    build: .
    ports:
      - "8787:8787"
    environment:
      - NODE_ENV=production
      - OTEL_ENABLED=false
    env_file:
      - .env
    volumes:
      - ./config:/app/config:ro
      - ./servers:/app/servers:ro
      - ./logs:/app/logs
      - ./audit:/app/audit
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "fetch('http://localhost:8787/healthz').then(r => r.ok ? process.exit(0) : process.exit(1)).catch(() => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - omni-mcp-network

  # Optional: Add a reverse proxy for production
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - orchestrator
    restart: unless-stopped
    networks:
      - omni-mcp-network
    profiles:
      - production

networks:
  omni-mcp-network:
    driver: bridge

volumes:
  logs:
  audit: