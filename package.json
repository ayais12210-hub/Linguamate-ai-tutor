{
  "name": "expo-app",
  "main": "expo-router/entry",
  "version": "1.0.0",
  "scripts": {
    "start": "bunx rork start -p vep9anbk6huqelg0fppmq --tunnel",
    "start-web": "bunx rork start -p vep9anbk6huqelg0fppmq --web --tunnel",
    "start-web-dev": "DEBUG=expo* bunx rork start -p vep9anbk6huqelg0fppmq --web --tunnel",
    "typecheck": "tsc --noEmit",
    "lint": "eslint 'src/**/*.{ts,tsx}' 'app/**/*.{ts,tsx}' 'components/**/*.{ts,tsx}' 'hooks/**/*.{ts,tsx}' 'lib/**/*.{ts,tsx}' 'features/**/*.{ts,tsx}' 'modules/**/*.{ts,tsx}' 'backend/**/*.{ts,tsx}' '__tests__/**/*.{ts,tsx}' 'tests/**/*.{ts,tsx}' --max-warnings=0 --report-unused-disable-directives",
    "format:check": "prettier . --check",
    "format:fix": "prettier . --write",
    "test": "jest",
    "test:ci": "jest --ci --runInBand --coverage --coverageReporters=text --coverageReporters=cobertura",
    "test:watch": "jest --watch",
    "test:changed": "jest --onlyChanged",
    "lint:changed": "eslint --ext .ts,.tsx --max-warnings=0 --report-unused-disable-directives --cache --cache-location .eslintcache",
    "e2e": "playwright test --reporter=line",
    "e2e:ci": "playwright install --with-deps && playwright test",
    "a11y": "playwright test -c playwright.a11y.config.ts --reporter=line",
    "perf": "lhci autorun || echo 'Lighthouse skipped'",
    "expo:doctor": "expo-doctor --fix",
    "audit:ci": "npm audit --audit-level=high",
    "scan": "npm-run-all -l -s expo:doctor typecheck lint format:check test:ci",
    "scan:full": "npm-run-all -l -s expo:doctor typecheck lint format:check test:ci e2e:ci audit:ci storybook:build",
    "scan:patterns": "npm-run-all -l -s typecheck lint test:ci storybook:build analyze",
    "gitleaks:scan": "gitleaks detect --config .gitleaks.toml --verbose",
    "gitleaks:scan:staged": "gitleaks detect --config .gitleaks.toml --staged --verbose",
    "gitleaks:scan:history": "gitleaks detect --config .gitleaks.toml --log-level info",
    "gitleaks:scan:report": "gitleaks detect --config .gitleaks.toml --report-format json --report-path gitleaks-report.json",
    "dev:server": "bun run backend/hono.ts",
    "dev:full": "concurrently -k -n APP,API \"bun run start\" \"bun run dev:server\"",
    "backend:dev": "bun run backend/hono.ts",
    "backend:build": "tsc --noEmit --project tsconfig.json",
    "backend:test": "jest --testPathPatterns=backend --verbose",
    "backend:typecheck": "tsc --noEmit --project tsconfig.json",
    "backend:lint": "eslint backend/ --ext .ts --max-warnings=0",
    "backend:start": "NODE_ENV=production bun run backend/hono.ts",
    "web:build": "expo export --platform web",
    "mcp:check": "node -e \"console.log('Validating MCP configuration...'); JSON.parse(require('fs').readFileSync('.cursor/mcp.json', 'utf8')); console.log('âœ… MCP configuration is valid JSON');\"",
    "mcp:test": "python3 mcp_servers/gitops_server.py && python3 mcp_servers/cursor_server.py",
    "agent:manager": "python3 agents/manager_agent.py",
    "agent:engineer": "python3 agents/engineer_agent.py",
    "agent:tester": "python3 agents/tester_agent.py",
    "agent:docs": "python3 agents/docs_agent.py",
    "agent:security": "python3 agents/security_agent.py",
    "agent:communication": "python3 agents/communication_system.py",
    "agent:observability": "python3 agents/observability_system.py",
    "agent:dashboard": "python3 agents/dashboard_system.py",
    "agent:error-handling": "python3 agents/error_handling_system.py",
    "agent:ml-prioritization": "python3 agents/ml_prioritization_system.py",
    "agent:learning": "python3 agents/agent_learning_system.py",
    "agent:advanced-analytics": "python3 agents/advanced_analytics_system.py",
    "agent:multi-repo": "python3 agents/multi_repository_system.py",
    "agent:all": "concurrently -k -n MANAGER,ENGINEER,TESTER,DOCS,SECURITY \"npm run agent:manager\" \"npm run agent:engineer\" \"npm run agent:tester\" \"npm run agent:docs\" \"npm run agent:security\"",
    "agent:all-advanced": "concurrently -k -n MANAGER,ENGINEER,TESTER,DOCS,SECURITY,ML,LEARNING,ANALYTICS,MULTIREPO \"npm run agent:manager\" \"npm run agent:engineer\" \"npm run agent:tester\" \"npm run agent:docs\" \"npm run agent:security\" \"npm run agent:ml-prioritization\" \"npm run agent:learning\" \"npm run agent:advanced-analytics\" \"npm run agent:multi-repo\"",
    "make:setup": "make setup",
    "make:typecheck": "make typecheck",
    "make:lint": "make lint",
    "make:test": "make test",
    "make:audit": "make audit",
    "make:build": "make build",
    "make:health": "make health",
    "make:validate-content": "make validate-content",
    "make:simulate-speech": "make simulate-speech",
    "make:scan": "make scan",
    "make:clean": "make clean",
    "versions": "node -e \"const p=require('./package.json');console.log({expo:p.dependencies?.expo,'expo-router':p.dependencies?.['expo-router'],react:p.dependencies?.react,'react-dom':p.dependencies?.['react-dom']})\"",
    "storybook": "storybook dev -p 6006",
    "storybook:build": "storybook build",
    "storybook:start": "storybook start",
    "analyze": "node scripts/analyze-bundle.js --all",
    "analyze:bundle": "node scripts/analyze-bundle.js --bundle",
    "analyze:patterns": "node scripts/analyze-bundle.js --patterns",
    "analyze:performance": "node scripts/analyze-bundle.js --performance",
    "postinstall": "node scripts/patch-expo-router.js && bash scripts/fix-react19-compatibility.sh"
  },
  "dependencies": {
    "@axe-core/playwright": "^4.10.2",
    "@commitlint/cli": "^20.1.0",
    "@commitlint/config-conventional": "^20.0.0",
    "@expo/vector-icons": "^14.1.0",
    "@faker-js/faker": "^10.0.0",
    "@hono/trpc-server": "^0.4.0",
    "@nkzw/create-context-hook": "^1.1.0",
    "@playwright/test": "^1.55.1",
    "@react-native-async-storage/async-storage": "2.1.2",
    "@react-native-community/netinfo": "11.4.1",
    "@react-navigation/native": "^7.1.6",
    "@sentry/node": "^10.17.0",
    "@sentry/react-native": "^6.22.0",
    "@shopify/flash-list": "^2.1.0",
    "@stardazed/streams-text-encoding": "^1.0.2",
    "@tanstack/react-query": "^5.87.4",
    "@tanstack/react-query-devtools": "^5.87.4",
    "@testing-library/jest-dom": "^6.9.1",
    "@testing-library/jest-native": "^5.4.3",
    "@testing-library/react": "^16.3.0",
    "@testing-library/react-native": "^13.3.3",
    "@trpc/client": "^11.5.1",
    "@trpc/react-query": "^11.5.1",
    "@trpc/server": "^11.5.1",
    "@types/crypto-js": "^4.2.2",
    "@types/jest": "^30.0.0",
    "@types/uuid": "^11.0.0",
    "@typescript-eslint/eslint-plugin": "^8.45.0",
    "@typescript-eslint/parser": "^8.45.0",
    "@ungap/structured-clone": "^1.3.0",
    "crypto-js": "^4.2.0",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-jest": "^29.0.1",
    "eslint-plugin-react-hooks": "^6.1.0",
    "eslint-plugin-react-native": "^5.0.0",
    "eslint-plugin-testing-library": "^7.11.0",
    "expo": "^53.0.4",
    "expo-application": "~6.1.5",
    "expo-av": "~15.1.7",
    "expo-blur": "~14.1.4",
    "expo-clipboard": "~7.1.5",
    "expo-constants": "~17.1.4",
    "expo-crypto": "~14.1.5",
    "expo-device": "~7.1.4",
    "expo-doctor": "^1.0.2",
    "expo-document-picker": "~13.1.6",
    "expo-font": "~13.3.0",
    "expo-haptics": "~14.1.4",
    "expo-image": "~2.1.6",
    "expo-image-picker": "~16.1.4",
    "expo-linear-gradient": "~14.1.5",
    "expo-linking": "~7.1.4",
    "expo-localization": "^17.0.7",
    "expo-location": "~18.1.4",
    "expo-notifications": "~0.31.4",
    "expo-router": "~5.0.7",
    "expo-speech": "~13.1.7",
    "expo-speech-recognition": "^2.1.5",
    "expo-splash-screen": "~0.30.7",
    "expo-sqlite": "~15.2.14",
    "expo-status-bar": "~2.2.3",
    "expo-symbols": "~0.4.4",
    "expo-system-ui": "~5.0.6",
    "expo-updates": "^29.0.12",
    "expo-web-browser": "^14.2.0",
    "framer-motion": "^12.23.22",
    "gsap": "^3.13.0",
    "hono": "^4.10.3",
    "husky": "^9.1.7",
    "i18next": "^25.5.3",
    "jest": "^30.2.0",
    "jest-environment-jsdom": "^30.2.0",
    "lighthouse": "^12.8.2",
    "lint-staged": "^16.2.3",
    "lottie-react-native": "7.2.2",
    "lucide-react-native": "^0.475.0",
    "madge": "^6.0.0",
    "msw": "^2.11.3",
    "nativewind": "^4.1.23",
    "npm-run-all": "^4.1.5",
    "pino": "^9.13.0",
    "pino-pretty": "^13.1.1",
    "posthog-react-native": "^4.7.1",
    "prettier": "^3.6.2",
    "react": "19.2.0",
    "react-dom": "19.2.0",
    "react-i18next": "^16.0.0",
    "react-native": "0.79.1",
    "react-native-gesture-handler": "~2.24.0",
    "react-native-mmkv": "^3.3.3",
    "react-native-purchases": "^9.5.3",
    "react-native-reanimated": "~3.17.4",
    "react-native-safe-area-context": "5.3.0",
    "react-native-screens": "~4.10.0",
    "react-native-svg": "15.11.2",
    "react-native-web": "^0.20.0",
    "react-server-dom-webpack": "~19.2.0",
    "semgrep": "^0.0.1",
    "superjson": "^2.2.2",
    "ts-jest": "^29.4.4",
    "uuid": "^13.0.0",
    "wait-on": "^9.0.1",
    "whatwg-url": "^15.1.0",
    "zod": "^4.1.8",
    "zustand": "^5.0.2"
  },
  "devDependencies": {
    "@babel/core": "^7.25.2",
    "@eslint/eslintrc": "^3.1.0",
    "@expo/ngrok": "^4.1.0",
    "@jest/globals": "^30.2.0",
    "@storybook/addon-ondevice-actions": "^9.1.4",
    "@storybook/addon-ondevice-controls": "^9.1.4",
    "@storybook/addon-ondevice-notes": "^9.1.4",
    "@storybook/react-native": "^9.1.4",
    "@testing-library/dom": "^10.4.1",
    "@types/bun": "^1.3.0",
    "@types/react": "^19.0.0",
    "eslint": "^9.31.0",
    "eslint-config-expo": "^9.2.0",
    "jest-expo": "^54.0.12",
    "react-test-renderer": "^19.0.0",
    "typescript": "~5.8.3",
    "web-streams-polyfill": "^4.2.0",
    "whatwg-fetch": "^3.6.20"
  },
  "overrides": {
    "tmp": "^0.2.5"
  },
  "private": true
}
