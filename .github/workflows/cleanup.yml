name: 🧹 Cleanup & Maintenance

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  cleanup-artifacts:
    name: 🗑️ Cleanup Old Artifacts
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🗑️ Clean up old artifacts
        uses: actions/github-script@v7
        with:
          script: |
            const artifacts = await github.rest.actions.listArtifactsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 100
            });
            
            const cutoffDate = new Date();
            cutoffDate.setDate(cutoffDate.getDate() - 7); // Keep artifacts for 7 days
            
            let deletedCount = 0;
            for (const artifact of artifacts.data.artifacts) {
              const createdAt = new Date(artifact.created_at);
              if (createdAt < cutoffDate) {
                await github.rest.actions.deleteArtifact({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  artifact_id: artifact.id
                });
                deletedCount++;
                console.log(`Deleted artifact: ${artifact.name} (${artifact.created_at})`);
              }
            }
            
            console.log(`Cleaned up ${deletedCount} old artifacts`);

  cleanup-runs:
    name: 🗑️ Cleanup Old Workflow Runs
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🗑️ Clean up old workflow runs
        uses: actions/github-script@v7
        with:
          script: |
            const workflows = await github.rest.actions.listWorkflowsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            
            const cutoffDate = new Date();
            cutoffDate.setDate(cutoffDate.getDate() - 30); // Keep runs for 30 days
            
            let deletedCount = 0;
            for (const workflow of workflows.data.workflows) {
              const runs = await github.rest.actions.listWorkflowRuns({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: workflow.id,
                status: 'completed',
                per_page: 100
              });
              
              for (const run of runs.data.workflow_runs) {
                const createdAt = new Date(run.created_at);
                if (createdAt < cutoffDate) {
                  await github.rest.actions.deleteWorkflowRun({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    run_id: run.id
                  });
                  deletedCount++;
                  console.log(`Deleted workflow run: ${run.display_title} (${run.created_at})`);
                }
              }
            }
            
            console.log(`Cleaned up ${deletedCount} old workflow runs`);

  security-audit:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🔍 Run security audit
        run: |
          npm audit --audit-level=moderate || echo "Security audit completed with warnings"
          
      - name: 🔍 Check for outdated packages
        run: |
          npm outdated || echo "No outdated packages found"

  dependency-update:
    name: 📦 Dependency Update Check
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 📦 Check for dependency updates
        run: |
          npx npm-check-updates --format group || echo "Dependency check completed"

  maintenance-summary:
    name: 📊 Maintenance Summary
    runs-on: ubuntu-latest
    needs: [cleanup-artifacts, cleanup-runs, security-audit, dependency-update]
    if: always()
    steps:
      - name: 📊 Generate maintenance summary
        run: |
          echo "# 🧹 Maintenance Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Task | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Cleanup Artifacts | ${{ needs.cleanup-artifacts.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Cleanup Runs | ${{ needs.cleanup-runs.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Security Audit | ${{ needs.security-audit.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Dependency Update | ${{ needs.dependency-update.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Maintenance tasks completed!**" >> $GITHUB_STEP_SUMMARY