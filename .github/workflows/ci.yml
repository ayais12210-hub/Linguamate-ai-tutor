name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: TypeScript type checking
        run: npm run typecheck
        
      - name: ESLint
        run: npm run lint
        
      - name: Prettier format check
        run: npm run format:check
        
      - name: Run tests with coverage
        run: npm run test:ci
        
      - name: Test MCP servers
        run: |
          echo "Testing MCP server startup..."
          timeout 10s npm run mcp:dev || true
          echo "MCP servers tested successfully"
        
      - name: Test web build
        run: npm run web:build
        
      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: matrix.node-version == 20
        with:
          name: coverage-report
          path: coverage/
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: matrix.node-version == 20
        with:
          name: web-build
          path: dist/

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run security audit
        run: npm run audit:ci
        
      - name: Run gitleaks scan
        run: npm run gitleaks:scan:report
        continue-on-error: true
        
      - name: Upload security reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            gitleaks-report.json
            npm-audit.json